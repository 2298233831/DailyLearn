#include <iostream>
#include <Windows.h>



int hookedMessageBox(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType)
{
	MessageBoxW(NULL, L"Hello the IAT Hook", L"The IAT Have been hooked", 0);

	return 0;
}

int main()
{
	MessageBoxA(NULL, "Hello World", "hhh", 0);

	PVOID imageBase = GetModuleHandleA(NULL);
	PIMAGE_DOS_HEADER dosHeaders = (PIMAGE_DOS_HEADER)imageBase;
	PIMAGE_NT_HEADERS ntHeaders = (PIMAGE_NT_HEADERS)((DWORD_PTR)imageBase + dosHeaders->e_lfanew);

	PIMAGE_IMPORT_DESCRIPTOR importDescriptor = NULL;
	IMAGE_DATA_DIRECTORY importsDirectory = ntHeaders->OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_IMPORT];
	importDescriptor = (PIMAGE_IMPORT_DESCRIPTOR)(importsDirectory.VirtualAddress + (DWORD_PTR)imageBase);
	LPCSTR libraryName = NULL;
	HMODULE library = NULL;
	PIMAGE_IMPORT_BY_NAME functionName = NULL;

	while (importDescriptor->Name != NULL)
	{
		libraryName = (LPCSTR)importDescriptor->Name + (DWORD_PTR)imageBase;
		library = LoadLibraryA(libraryName);

		if (library)
		{
			PIMAGE_THUNK_DATA PINT = NULL, PIAT = NULL;
			PINT = (PIMAGE_THUNK_DATA)((DWORD_PTR)imageBase + importDescriptor->OriginalFirstThunk);
			PIAT = (PIMAGE_THUNK_DATA)((DWORD_PTR)imageBase + importDescriptor->FirstThunk);

			while (PINT->u1.AddressOfData != NULL)
			{
				functionName = (PIMAGE_IMPORT_BY_NAME)((DWORD_PTR)imageBase + PINT->u1.AddressOfData);

				// find MessageBoxA address
				if (!strcmp(functionName->Name,"MessageBoxA"))
				{
					
					DWORD oldProtect = 0;
					VirtualProtect((LPVOID)(&PIAT->u1.Function), 8, PAGE_READWRITE, &oldProtect);

					// swap MessageBoxA address with address of hookedMessageBox
					PIAT->u1.Function = (DWORD_PTR)hookedMessageBox;
					VirtualProtect((LPVOID)(&PIAT->u1.Function), 4, oldProtect, &oldProtect);
				}
				++PINT;
				++PIAT;
			}
		}

		importDescriptor++;
	}

	MessageBoxA(NULL, "Hello after Hooking", "Hello ", 0);

	return 0;
}
